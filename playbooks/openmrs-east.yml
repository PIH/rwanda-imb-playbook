- hosts: all
  become: yes
  gather_facts: false
  vars:
    openmrs_distro_site: "rwinkwavu"

  vars_files:
      - ../vars/all_vars.yml

  roles:
    - base-packages
    - java
    - mysql
    - mysql-databases
    - mysql-users
    - tomcat
    - apache
    - canvas_lms
    - canvas_db
  tasks:
  - name: OpenMRS Database | Restart MySQL
    service: name=mysql state=restarted

  # Ensure OpenMRS configuration directories are setup

  - name: OpenMRS Server | Check if distro has frontend content
    stat: path={{ openmrs_distro_artifact_dir }}/frontend
    register: p

  - name: OpenMRS Server | Ensure distribution directory exists
    file: path={{ openmrs_distro_dir }} state=directory owner={{ openmrs_user }} group={{ openmrs_group }}

  - name: OpenMRS Server | Ensure distribution directory is empty
    shell: rm -fR {{ openmrs_distro_dir }}/*

  - name: OpenMRS Server | Ensure data directory exists
    file: path={{ openmrs_data_dir }} state=directory owner={{ openmrs_user }} group={{ openmrs_group }} mode=0600 recurse=yes

  - name: OpenMRS Server | Ensure modules directory exists
    file: path={{ openmrs_data_dir }}/modules state=directory owner={{ openmrs_user }} group={{ openmrs_group }} mode=0600 recurse=yes

  - name: OpenMRS Server | Ensure modules directory is empty
    shell: rm -fR {{ openmrs_data_dir }}/modules/*

  - name: OpenMRS Server | Ensure configuration directory exists
    file: path={{ openmrs_data_dir }}/configuration state=directory owner={{ openmrs_user }} group={{ openmrs_group }} mode=0600 recurse=yes

  - name: OpenMRS Server | Ensure configuration directory is empty
    shell: rm -fR {{ openmrs_data_dir }}/configuration/*

  - name: OpenMRS Server | Ensure frontend directory exists
    file: path={{ openmrs_data_dir }}/frontend state=directory owner={{ openmrs_user }} group={{ openmrs_group }} mode=0600 recurse=yes
    when: p.stat.exists

  - name: OpenMRS Server | Ensure frontend directory is empty
    shell: rm -fR {{ openmrs_data_dir }}/frontend/*
    when: p.stat.exists

  - name: OpenMRS Server | Ensure frontend site directory exists
    file: path={{ openmrs_data_dir }}/frontend/site state=directory owner={{ openmrs_user }} group={{ openmrs_group }} mode=0600 recurse=yes
    when: p.stat.exists

  - name: OpenMRS Server | Ensure frontend site directory is empty
    shell: rm -fR {{ openmrs_data_dir }}/frontend/site/*
    when: p.stat.exists

  # Install Distribution Components

  - name: OpenMRS Server | Ensure maven is installed and configured
    apt: name=maven state=latest update_cache=yes

  - name: OpenMRS Server | Download the distribution artifact from Maven into local repo
    shell: mvn dependency:get -U -Dartifact={{ openmrs_distro_maven_artifact }} -s /tmp/settings.xml

  - name: OpenMRS Server | Copy the distribution from the local repo into this server
    shell: mvn dependency:copy -Dartifact={{ openmrs_distro_maven_artifact }} -DoutputDirectory={{ openmrs_distro_dir }} -Dmdep.useBaseVersion=true

  - name: OpenMRS Server | Extract distribution artifacts out of the zip
    unarchive: src={{ openmrs_distro_dir }}/{{ openmrs_distro_artifact_file }} dest={{ openmrs_distro_dir }} remote_src=true

  - name: OpenMRS Server | Copy war
    shell: cp {{ openmrs_distro_artifact_dir }}/openmrs_webapps/* {{ tomcat_home }}/webapps

  - name: OpenMRS Server | Copy modules
    shell: cp {{ openmrs_distro_artifact_dir }}/openmrs_modules/* {{ openmrs_data_dir }}/modules

  - name: OpenMRS Server | Copy configuration
    shell: cp -r {{ openmrs_distro_artifact_dir }}/openmrs_config/* {{ openmrs_data_dir }}/configuration

  - name: OpenMRS Server | Copy frontend
    shell: cp -r {{ openmrs_distro_artifact_dir }}/frontend/* {{ openmrs_data_dir }}/frontend
    when: p.stat.exists

  - name: OpenMRS Server | Copy frontend Config
    shell: cp -r {{ openmrs_distro_artifact_dir }}/openmrs_config/frontend/* {{ openmrs_data_dir }}/frontend/site
    when: p.stat.exists

  - name: OpenMRS Server | Configure "openmrs-runtime.properties"
    template:
      src: roles/tomcat/templates/openmrs-runtime.properties.j2
      dest: "{{ openmrs_data_dir }}/openmrs-runtime.properties"
      owner: "{{ openmrs_user }}"
      group: "{{ openmrs_group }}"
      mode: 0600
